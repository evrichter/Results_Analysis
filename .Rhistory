### PACKAGES
library(ggplot2)
library(data.table)
library(gridExtra)
setwd("/Users/chr/Nextcloud/Exp4/SPR/")
setwd("~/Downloads/SPR_forfollowup/SPR/")
source("ibex_fns.r")
#### DATA FORMATTING
# Get DEMOG CONSENT SURVEY data
cn <- get_consent("consent.txt")
dm <- get_demog("demog.txt")
sv <- get_survey("survey.txt")
survey <- merge(dm, sv, by=c("IPhash"), all=TRUE)
survey$Age <- as.numeric(survey$Age)
round(mean(survey$Age),2)
round(sd(survey$Age),2)
range(survey$Age)
table(survey$gender)
nrow(survey[!(Native_language %in% c("Deutsch", "deutsch")),])
table(survey$Task_difficulty)/length(survey$Task_difficulty)
table(survey$Experiment_length)/length(survey$Experiment_length)
table(survey$handedness)
# Get REACTION TIMES & READING TIMES
rc <- get_reacts("task.txt")
rd <- get_reads("reading.txt")
df <- merge(rd, rc[,c("ReactionTime", "Accuracy", "IPhash", "Item")], by=c("IPhash", "Item"), all=TRUE)
# Change IPhashes to subject numbers
colnames(df)[1] <- "Subject"
df[, Subject := .GRP, by = .(Subject)]
df$Subject <- as.character(df$Subject)
# Check accuracies / reaction times
agg_df <- df[, lapply(.SD, mean, na.rm = TRUE), by=Subject, .SDcols=c("ReactionTime", "Accuracy", "ReadingTime")]
agg_df$Subject <- as.factor(agg_df$Subject)
agg_df[order(agg_df$ReactionTime),]
agg_df[order(agg_df$Accuracy),]
# merge with assoc and cloze pretest values
pretests <- fread("../Norming/GradedP6_pretests.csv")
df <- merge(df, pretests[,c("Item", "Condition", "Verb", "Target", "Distractor", "Last_Mentioned", "Cloze", "Cloze_distractor", "Cloze_C_alternative", "Plaus", "Plaus_distractor")], by=c("Item", "Condition"))
# add precritRT as predictor
df$precritRT <- rep(df[Region=="Pre-critical",]$ReadingTime, each=5)
fwrite(df, "GP6SPR.csv")
# # Verb length per cond
# # Verb length per cond
# df$ncharverb <- nchar(df$Verb)
# ########## READ PROCESSED DATA
# ########## READ PROCESSED DATA
# setwd("/Users/chr/Nextcloud/Exp4/SPR/")
# ########## READ PROCESSED DATA
# setwd("/Users/chr/Nextcloud/Exp4/SPR/")
# df_bal <- fread("Exp4_SPR.csv")
# # data exclusion per region
# # data exclusion per region
# cutoff_in_sd = 4
# # data exclusion per region
# cutoff_in_sd = 4
# # df_first <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "First",], sd_cutoff=cutoff_in_sd)
# # data exclusion per region
# cutoff_in_sd = 4
# # df_first <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "First",], sd_cutoff=cutoff_in_sd)
# # df_second <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Second",], sd_cutoff=cutoff_in_sd)
# # data exclusion per region
# cutoff_in_sd = 4
# # df_first <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "First",], sd_cutoff=cutoff_in_sd)
# # df_second <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Second",], sd_cutoff=cutoff_in_sd)
# # df_third <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Third",], sd_cutoff=cutoff_in_sd)
# # data exclusion per region
# cutoff_in_sd = 4
# # df_first <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "First",], sd_cutoff=cutoff_in_sd)
# # df_second <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Second",], sd_cutoff=cutoff_in_sd)
# # df_third <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Third",], sd_cutoff=cutoff_in_sd)
# # df_fourth <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Fourth",], sd_cutoff=cutoff_in_sd)
# # data exclusion per region
# cutoff_in_sd = 4
# # df_first <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "First",], sd_cutoff=cutoff_in_sd)
# # df_second <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Second",], sd_cutoff=cutoff_in_sd)
# # df_third <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Third",], sd_cutoff=cutoff_in_sd)
# # df_fourth <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Fourth",], sd_cutoff=cutoff_in_sd)
# # df_fifth <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Fifth",], sd_cutoff=cutoff_in_sd)
# # data exclusion per region
# cutoff_in_sd = 4
# # df_first <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "First",], sd_cutoff=cutoff_in_sd)
# # df_second <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Second",], sd_cutoff=cutoff_in_sd)
# # df_third <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Third",], sd_cutoff=cutoff_in_sd)
# # df_fourth <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Fourth",], sd_cutoff=cutoff_in_sd)
# # df_fifth <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Fifth",], sd_cutoff=cutoff_in_sd)
# # df_sixth <- exclude(df_bal[ReadingTime > 100 & ReadingTime < 2500 & Region == "Sixth",], sd_cutoff=cutoff_in_sd)
### PACKAGES
library(ggplot2)
library(data.table)
library(gridExtra)
setwd("/Downloads/SPR_forfollowup/SPR/")
### PACKAGES
library(ggplot2)
library(data.table)
library(gridExtra)
setwd("/Downloads/SPR_forfollowup/SPR/")
source("ibex_fns.r")
### PACKAGES
library(ggplot2)
library(data.table)
library(gridExtra)
setwd("~/Downloads/SPR_forfollowup/SPR/")
source("ibex_fns.r")
#### DATA FORMATTING
# Get DEMOG CONSENT SURVEY data
cn <- get_consent("consent.txt")
install.packages('bit64')
setwd("~/Downloads/SPR_forfollowup/SPR/")
source("ibex_fns.r")
#### DATA FORMATTING
# Get DEMOG CONSENT SURVEY data
cn <- get_consent("consent.txt")
dm <- get_demog("demog.txt")
sv <- get_survey("survey.txt")
survey <- merge(dm, sv, by=c("IPhash"), all=TRUE)
survey$Age <- as.numeric(survey$Age)
View(dm)
View(survey)
#### DATA FORMATTING
# Get DEMOG CONSENT SURVEY data
cn <- get_consent("consent.txt")
dm <- get_demog("demog.txt")
sv <- get_survey("survey.txt")
debugSource("~/Downloads/SPR_forfollowup/SPR/read_ibex.r", echo=TRUE)
View(survey)
debugSource("~/Downloads/SPR_forfollowup/SPR/read_ibex.r", echo=TRUE)
View(survey)
View(survey)
debugSource("~/Downloads/SPR_forfollowup/SPR/read_ibex.r", echo=TRUE)
debugSource("~/Downloads/SPR_forfollowup/SPR/read_ibex.r", echo=TRUE)
### PACKAGES
library(ggplot2)
library(data.table)
library(gridExtra)
setwd("~/Downloads/SPR_forfollowup/SPR/")
source("ibex_fns.r")
#### DATA FORMATTING
# Get DEMOG CONSENT SURVEY data
cn <- get_consent("consent.txt")
dm <- get_demog("demog.txt")
sv <- get_survey("survey.txt")
survey <- merge(dm, sv, by=c("IPhash"), all=TRUE)
survey$Age <- as.numeric(survey$Age)
test <- round(mean(survey$Age),2)
test <- round(mean(survey$Age),2)
round(sd(survey$Age),2)
setwd("~/Downloads/SPR_forfollowup/SPR/")
source("ibex_fns.r")
#### DATA FORMATTING
# Get DEMOG CONSENT SURVEY data
cn <- get_consent("consent.txt")
dm <- get_demog("demog.txt")
sv <- get_survey("survey.txt")
survey <- merge(dm, sv, by=c("IPhash"), all=TRUE)
survey$Age <- as.numeric(survey$Age)
round(mean(survey$Age),2)
round(sd(survey$Age),2)
range(survey$Age)
table(survey$gender)
nrow(survey[!(Native_language %in% c("Deutsch", "deutsch")),])
View(survey)
View(survey)
range(survey$Age)
table(survey$gender)
nrow(survey[!(Native_language %in% c("Deutsch", "deutsch")),])
table(survey$Task_difficulty)/length(survey$Task_difficulty)
table(survey$Experiment_length)/length(survey$Experiment_length)
table(survey$handedness)
# Get REACTION TIMES & READING TIMES
rc <- get_reacts("task.txt")
View(rc)
rd <- get_reads("reading.txt")
View(rd)
View(rd)
df <- merge(rd, rc[,c("ReactionTime", "Accuracy", "IPhash", "Item")], by=c("IPhash", "Item"), all=TRUE)
rd <- get_reads("reading.txt")
df <- merge(rd, rc[,c("ReactionTime", "Accuracy", "IPhash", "Item")], by=c("IPhash", "Item"), all=TRUE)
View(df)
# Change IPhashes to subject numbers
colnames(df)[1] <- "Subject"
df[, Subject := .GRP, by = .(Subject)]
df$Subject <- as.character(df$Subject)
# Check accuracies / reaction times
agg_df <- df[, lapply(.SD, mean, na.rm = TRUE), by=Subject, .SDcols=c("ReactionTime", "Accuracy", "ReadingTime")]
View(agg_df)
View(agg_df)
agg_df$Subject <- as.factor(agg_df$Subject)
View(agg_df)
View(agg_df)
agg_df[order(agg_df$ReactionTime),]
agg_df[order(agg_df$Accuracy),]
# merge with assoc and cloze pretest values
pretests <- fread("../Norming/GradedP6_pretests.csv")
### PACKAGES
library(ggplot2)
library(data.table)
library(gridExtra)
setwd("~/Downloads/Master_Thesis_/3_SPR_Study/Result_Analysis/")
library(gridExtra)
setwd("~/Downloads/Master_Thesis/3_SPR_Study/Result_Analysis/")
setwd("~/Downloads/Master_Thesis/3_SPR_Study/")
### PACKAGES
library(ggplot2)
library(data.table)
library(gridExtra)
setwd("~/Downloads/Master_Thesis/3_SPR_Study/Results_Analysis/")
source("ibex_fns.r")
#### DATA FORMATTING
# Get DEMOG CONSENT SURVEY data
cn <- get_consent("consent.txt")
#### DATA FORMATTING
# Get DEMOG CONSENT SURVEY data
cn <- get_consent("consent.txt")
setwd("~/Downloads/Master_Thesis/3_SPR_Study/Results_Analysis/")
source("ibex_fns.r")
#### DATA FORMATTING
# Get DEMOG CONSENT SURVEY data
cn <- get_consent("consent.txt")
debugSource("~/Downloads/Master_Thesis/3_SPR_Study/Results_Analysis/ibex_fns.r", echo=TRUE)
cn <- get_consent("consent.txt")
debugSource("~/Downloads/Master_Thesis/3_SPR_Study/Results_Analysis/ibex_fns.r", echo=TRUE)
setwd("~/Downloads/Master_Thesis/3_SPR_Study/Results_Analysis/")
cn <- get_consent("consent.txt")
debugSource("~/Downloads/Master_Thesis/3_SPR_Study/Results_Analysis/ibex_fns.r")
